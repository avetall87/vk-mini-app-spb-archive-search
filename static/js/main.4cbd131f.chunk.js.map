{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","useState","setName","getSearchParams","setSearchParams","useEffect","reset","search","a","window","open","title","before","photo_200","src","description","city","first_name","last_name","align","type","value","onChange","event","target","placeholder","style","display","padding","margin","justifyContent","size","onClick","App","activePanel","setActivePanel","setUser","popout","setPopout","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"ssBA6DeA,EAnDF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,GAAQC,GAAiB,EAArBC,GAAqB,EAAjBD,aAAiB,EAETE,mBAAS,IAFA,mBAEpBC,GAFoB,aAGOD,mBAAS,IAHhB,mBAG7BE,EAH6B,KAGZC,EAHY,KAKpCC,qBAAU,WACNC,MACD,IAEH,IAAMC,EAAM,uCAAG,sBAAAC,EAAA,sDACXC,OAAOC,KAAP,oDAAyDP,EAAzD,0BADW,2CAAH,qDAING,EAAQ,WACVJ,EAAQ,IACRE,EAAgB,KAOpB,OAAQ,kBAAC,IAAD,CAAON,GAAIA,GAEVC,GACD,kBAAC,IAAD,CAAOY,MAAM,sEACT,kBAAC,IAAD,CACIC,OAAQb,EAAYc,UAAY,kBAAC,IAAD,CAAQC,IAAKf,EAAYc,YAAe,KACxEE,YAAahB,EAAYiB,MAAQjB,EAAYiB,KAAKL,MAAQZ,EAAYiB,KAAKL,MAAQ,IAFvF,UAIQZ,EAAYkB,WAJpB,YAIkClB,EAAYmB,aAIlD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAIC,MAAM,UAAV,sJACA,kBAAC,IAAD,CAAOrB,GAAG,gBAAgBsB,KAAK,OAAOC,MAAOlB,EAAiBmB,SAnBxD,SAACC,GACnBnB,EAAgBmB,EAAMC,OAAOH,QAkBsEI,YAAY,iKACnG,6BACA,6BACA,yBAAKC,MAAO,CAACC,QAAS,OAAQC,QAAS,OAAQC,OAAQ,OAAQC,eAAgB,kBAC3E,kBAAC,IAAD,CAAQC,KAAK,KAAKpB,MAAM,oPAAiDqB,QAASzB,GAAlF,6CCVT0B,EAjCH,WAAO,IAAD,EACqBhC,mBAAS,QAD9B,mBACViC,EADU,KACGC,EADH,OAEclC,mBAAS,MAFvB,mBAEVF,EAFU,KAEGqC,EAFH,OAGWnC,mBAAS,kBAAC,IAAD,CAAe8B,KAAK,WAHxC,mBAGVM,EAHU,KAGFC,EAHE,KAKjBjC,qBAAU,WAAM,4CASf,4BAAAG,EAAA,sEACoB+B,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECL,EAAQK,GACRH,EAAU,MAHX,4CATe,sBACfC,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUvB,EAAkB,EAAlBA,KAAMwB,EAAY,EAAZA,KACnC,GAAa,yBAATxB,EAAiC,CACpC,IAAMyB,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBxB,MAAQuB,EAAKI,OAASJ,EAAKI,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OALzB,mCAcfO,KACE,IAMH,OACC,kBAAC,IAAD,CAAMlB,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMvC,GAAG,OAAOC,YAAaA,EAAaC,GANjC,SAAAqD,GACVlB,EAAekB,EAAEC,cAAcC,QAAQC,SCvBzCjB,IAAOC,KAAK,gBAEZiB,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASa,eAAe,W","file":"static/js/main.4cbd131f.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Input from \"@vkontakte/vkui/dist/components/Input/Input\";\n\n\nconst Home = ({id, go, fetchedUser}) => {\n\n    const [getName, setName] = useState('');\n    const [getSearchParams, setSearchParams] = useState('');\n\n    useEffect(() => {\n        reset();\n    }, []);\n\n    const search = async () => {\n        window.open(`https://medal.spbarchives.ru/search?query=${getSearchParams}&advancedSearch=false`);\n    }\n\n    const reset = () => {\n        setName('');\n        setSearchParams('');\n    }\n\n    const onLabelChange = (event) => {\n        setSearchParams(event.target.value);\n    };\n\n    return (<Panel id={id}>\n            {/*<PanelHeader>Поиск архивных документов</PanelHeader>*/}\n            {fetchedUser &&\n            <Group title=\"Ползователь\">\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n                >\n                    {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n                </Cell>\n            </Group>}\n\n            <Group>\n                <Div>\n                    <h2 align=\"center\">Поиск награжденных медалью</h2>\n                    <Input id=\"medalSearchId\" type=\"text\" value={getSearchParams} onChange={onLabelChange} placeholder=\"ФИО, год рождения, место работы\"/>\n                    <br/>\n                    <br/>\n                    <div style={{display: \"flex\", padding: \"10px\", margin: \"10px\", justifyContent: \"space-between\"}}>\n                        <Button size=\"xl\" title=\"Искать на сайте: Медаль ЗА ОБОРОНУ ЛЕНИИНГРАДА\" onClick={search}>\n                            Искать\n                        </Button>\n                    </div>\n                </Div>\n            </Group>\n        </Panel>\n    )\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}